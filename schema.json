{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://example.com/product.schema.json",
    "title": "Rhombus Configuration",
    "description": "Configuration format for the Rhombus CTF platform",
    "type": "object",
    "properties": {
        "location_url": {
            "title": "Location URL",
            "description": "Base URL where the site is hosted at",
            "type": "string",
            "pattern": "^https?:\/\/.*",
            "examples": [
                "https://demo.rhombus.gg",
                "http://localhost:3000"
            ]
        },
        "jwt_secret": {
            "title": "JWT Secret",
            "description": "Secret (ideally random) value to sign and verify JWTs. Generate with\nopenssl rand -hex 16",
            "type": "string",
            "examples": [
                "long_random_value"
            ]
        },
        "database_url": {
            "title": "Database URL",
            "description": "Database connection url. Will automatically detect from scheme",
            "type": "string",
            "pattern": "^(postgres|file):\/\/.*",
            "examples": [
                "file://rhombus.db",
                "postgres://postgres:password@localhost"
            ]
        },
        "live_reload": {
            "title": "Live Reload",
            "description": "Automatically inject javascript to reload the page on save. Defaults to `true` when compiled in debug mode",
            "type": "boolean",
            "default": true,
            "examples": [
                true
            ]
        },
        "ip_preset": {
            "title": "IP Preset",
            "description": "Choose from a few default ways to extract the client IP address. For more advanced configuration, omit this option and write a custom function in Rust",
            "type": "string",
            "default": "peer-ip",
            "enum": [
                "rightmost-x-forwarded-for",
                "x-real-ip",
                "fly-client-ip",
                "true-client-ip",
                "cf-connecting-ip",
                "peer-ip"
            ],
            "examples": [
                "rightmost-x-forwarded-for",
                "x-real-ip",
                "fly-client-ip",
                "true-client-ip",
                "cf-connecting-ip",
                "peer-ip"
            ]
        },
        "turso": {
            "title": "Turso",
            "description": "Configuration for 3rd party database provider https://turso.tech",
            "type": "object",
            "properties": {
                "auth_token": {
                    "title": "Auth Token",
                    "description": "Authentication token to access the database",
                    "type": "string",
                    "pattern": ".+\\..+\\..+"
                }
            }
        },
        "ratelimit": {
            "title": "Rate limit",
            "description": "Configuration related to built in rate limiting",
            "type": "object",
            "properties": {
                "per_millisecond": {
                    "title": "Per Millisecond",
                    "description": "Set the interval after which one element of the quota is replenished in milliseconds",
                    "type": "number",
                    "minimum": 1,
                    "default": 500,
                    "examples": [
                        500
                    ]
                },
                "burst_size": {
                    "title": "Burst Size",
                    "description": "Set quota size that defines how many requests can occur before the governor middleware starts blocking requests from an IP address and clients have to wait until the elements of the quota are replenished",
                    "type": "number",
                    "minimum": 1,
                    "default": 8,
                    "examples": [
                        8
                    ]
                }
            }
        },
        "discord": {
            "title": "Discord",
            "description": "Discord configuration properties",
            "type": "object",
            "properties": {
                "guild_id": {
                    "title": "Guild ID",
                    "description": "Snowflake developer discord ID of guild (server) for support",
                    "type": [
                        "string",
                        "number"
                    ],
                    "pattern": "^\\d{19}$",
                    "minimum": 1000000000000000000,
                    "maximum": 9999999999999999999,
                    "examples": [
                        "1160610137703186636"
                    ]
                },
                "client_id": {
                    "title": "Client ID",
                    "description": "OAuth2 Client ID (discord snowflake)",
                    "type": [
                        "string",
                        "number"
                    ],
                    "pattern": "^\\d{19}$",
                    "minimum": 1000000000000000000,
                    "maximum": 9999999999999999999,
                    "examples": [
                        "1160076447977848945"
                    ]
                },
                "client_secret": {
                    "title": "Client Secret",
                    "description": "OAuth2 Client Secret",
                    "type": "string"
                },
                "bot_token": {
                    "title": "Bot Token",
                    "description": "Bot token",
                    "type": "string",
                    "pattern": ".+\\..+\\..+"
                }
            }
        }
    }
}